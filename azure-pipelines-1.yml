# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none

pool:
  vmImage: ubuntu-latest

steps:
- task: AzureResourceManagerTemplateDeployment@3
  inputs:
    deploymentScope: 'Resource Group'
    azureResourceManagerConnection: 'Visual Studio Enterprise Subscription (69f26762-afa0-46b5-8311-4fbdf35b3060)'
    subscriptionId: '69f26762-afa0-46b5-8311-4fbdf35b3060'
    action: 'Create Or Update Resource Group'
    resourceGroupName: 'Gethu-AKS-RG'
    location: 'East US'
    templateLocation: 'URL of the file'
    csmFileLink: 'https://raw.githubusercontent.com/gethuravi2020/ghost-app/main/infra/AKS/azuredeploy.json'
    csmParametersFileLink: 'https://raw.githubusercontent.com/gethuravi2020/ghost-app/main/infra/AKS/azuredeploy.parameters.json'
    deploymentMode: 'Incremental'
    deploymentOutputs: aks_arm
- task: AzureResourceManagerTemplateDeployment@3
  inputs:
    deploymentScope: 'Resource Group'
    azureResourceManagerConnection: 'Visual Studio Enterprise Subscription (69f26762-afa0-46b5-8311-4fbdf35b3060)'
    subscriptionId: '69f26762-afa0-46b5-8311-4fbdf35b3060'
    action: 'Create Or Update Resource Group'
    resourceGroupName: 'Gethu-AKS-RG'
    location: 'East US'
    templateLocation: 'URL of the file'
    csmFileLink: 'https://raw.githubusercontent.com/gethuravi2020/ghost-app/main/infra/ACR/azuredeploy.json'
    csmParametersFileLink: 'https://raw.githubusercontent.com/gethuravi2020/ghost-app/main/infra/ACR/azuredeploy.parameters.json'
    deploymentMode: 'Incremental'
    deploymentOutputs: acr_arm
- powershell: |
    Write-Host "Output of the AKS Deployment is : $(aks_arm)"
    Write-Host "Output of the AKS Deployment is : $(acr_arm)"
- pwsh: |
    ## aks_arm is already a pipeline variable returned via the ARM deployment
    ## task's deploymentOutputs attribute
    $armOutputObj = $aks_arm | convertfrom-json
    $armOutputObj.PSObject.Properties | ForEach-Object {
      $aksname = $_.Name
      $value = $_.Value.value

      ## Creates a standard pipeline variable
      Write-Output "##vso[task.setvariable variable=$aksName;]$value"
      
      ## Creates an output variable
      Write-Output "##vso[task.setvariable variable=$aksName;isOutput=true]$value"
    }
- task: AzurePowerShell@5
  inputs:
    azureSubscription: 'Visual Studio Enterprise Subscription (69f26762-afa0-46b5-8311-4fbdf35b3060)'
    ScriptType: 'InlineScript'
    Inline: 'az pipelines variable-group variable create --group-id 1 --name $aksname --value $value --org https://dev.azure.com/ravij2020/ --project ITOps'
    errorActionPreference: 'continue'
    azurePowerShellVersion: 'LatestVersion'

